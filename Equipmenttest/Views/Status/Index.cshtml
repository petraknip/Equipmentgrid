@model Dictionary<string, Dictionary<string, Dictionary<int, string>>>
@{
    ViewData["Title"] = "Index";
}


<div class="outercontainer">

    @foreach (var room in Model)
    {
        <h1>@room.Key</h1>
        <div class="roomcontainer">

            @foreach (var deviceType in room.Value)
            {
                <div class="grid-item">
                    <h3>@deviceType.Key</h3>



                    @foreach (var device in deviceType.Value)
                    {


                        var i = 0;
                        while (i < deviceType.Value.Count)
                        {
                            <div class="tenItems">
                                @for (var j = 0; j < j + 10; j++)
                                {
                                @device<br />
                                @j += 10;
                                }
                            </div>

                        }



                    }
                    @*@for (var i = 0; i < deviceType.Value.Count; i++)
                        {
                        <div class="tenItems">
                            @foreach (var device in room.Value)
                            {
                                while (device.Value.Count < 10)
                                {@device<br />}

                            }
                        </div>
                        }*@






                </div>
            }
        </div>
    }
</div>


@*@for (var i = 0; i < deviceType.Value.Count; i += 10)
    {
        var chunk = deviceType.Value.Values.Skip(i).Take(10);


        @foreach (var device in chunk)
        {
            @device<br />
        }
    }*@

@*<div class="outercontainer">
        @foreach (var room in Model)
        {
            <div class="roomContainer">
                <h1>@room.Key</h1>


                @foreach (var deviceType in room.Value)
                {
                    <div class="innercontainer">
                        <h3>@deviceType.Key</h3>

                        <ul class="gridlist">
                            @foreach (var device in deviceType.Value)
                            {
                                <li>
                                    @device
                                </li>
                            }
                        </ul>

                    </div>



                }

            </div>
        }
    </div>*@

@*OUDE CODE HIERONDER*@


@*<div class="gridContainer">
    <div class="grid">*@

@*@foreach (var room in Model)
        {

            //var roomcol = $"{1 / 7}";
            //var roomrow = $"{1 / 3}";

            <h1 style="grid-column: 1 / 7 ; grid-row: 1 / 3 ">@room.Key</h1>







            @foreach (var deviceType in room.Value)
            {
                <div class="grid-item">
                <h3>@deviceType.Key</h3>

                for (var i = 0; i < deviceType.Value.Count; i += 10)
                {
                    var chunk = deviceType.Value.Values.Skip(i).Take(10);
                    var column = $"{(i % 60 / 10) + 1} / {(i % 60 / 10) + 2}";


                    for (var j = 0; j < deviceType.Value.Count; j++)
                    {
                        var row = $"{(j / 60) + 3} / {(j / 60) + 4}";

                        <div style="grid-column: @column; grid-row: @row">
                            @foreach (var device in chunk)
                            {
                                @device<br />
                            }
                        </div>

                    }
                }
    </div>
            }





        }
    </div>
    </div>*@
