@model Dictionary<string, Dictionary<string, Dictionary<int, string>>>
@{
    ViewData["Title"] = "Index";
}




<div class="roomContainer">
    @foreach (var room in Model)
    {

        <h1>@room.Key</h1>


        @foreach (var deviceType in room.Value)
        {
            <h3>@deviceType.Key</h3>

        }
    }
</div>




@*OUDE CODE HIERONDER*@


@*<div class="gridContainer">
    <div class="grid">*@

@*@foreach (var room in Model)
        {

            //var roomcol = $"{1 / 7}";
            //var roomrow = $"{1 / 3}";

            <h1 style="grid-column: 1 / 7 ; grid-row: 1 / 3 ">@room.Key</h1>


            @foreach (var deviceType in room.Value)
            {
                <h3>@deviceType.Key</h3>

                for (var i = 0; i < deviceType.Value.Count; i += 10)
                {
                    var chunk = deviceType.Value.Values.Skip(i).Take(10);
                    var column = $"{(i % 60 / 10) + 1} / {(i % 60 / 10) + 2}";


                    for (var j = 0; j < deviceType.Value.Count; j++)
                    {
                        var row = $"{(j / 60) + 3} / {(j / 60) + 4}";

                        <div style="grid-column: @column; grid-row: @row">
                            @foreach (var device in chunk)
                            {
                                @device<br />
                            }
                        </div>

                    }
                }
            }
        }
    </div>
    </div>*@